# gobackup config example
# -----------------------
# Put this file in follow place:
# ~/.gobackup/gobackup.yml or /etc/gobackup/gobackup.yml
web:
  username: gobackup
  password: 123456
models:
  base_test:
    description: "This is base test."
    schedule:
      # At 04:05 on Sunday.
      cron: "5 4 * * sun"
    compress_with:
      type: tgz
    encrypt_with:
      type: openssl
      password: 123456
      salt: false
      openssl: true
    storages:
      local:
        type: local
        keep: 10
        path: /Users/jason/Downloads/backup1
      scp:
        type: scp
        keep: 10
        path: ~/backup
        host: your-host.com
        private_key: ~/.ssh/id_rsa
        username: ubuntu
        password: password
        timeout: 300
      s3:
        type: s3
        keep: 20
        bucket: gobackup-test
        region: ap-southeast-1
        path: backups
        access_key_id: xxxxxxxx
        secret_access_key: xxxxxxxxxxxx
      azure:
        type: azure
        account: my-storage-account
        # container: gobackup
        tenant_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        client_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        client_secret: xxxxxxxx
    databases:
      dummy_test:
        type: mysql
        host: localhost
        port: 3306
        database: dummy_test
        username: root
        password: 123456
      redis1:
        type: redis
        mode: sync
        rdb_path: /var/db/redis/dump.rdb
        invoke_save: true
        password: 456123
      postgresql:
        type: postgresql
        host: localhost
    archive:
      includes:
        - /home/ubuntu/.ssh/
        - /etc/nginx/nginx.conf
        - /etc/redis/redis.conf
        - /etc/logrotate.d/
      excludes:
        - /home/ubuntu/.ssh/known_hosts
        - /etc/logrotate.d/syslog
  normal_files:
    schedule:
      every: "1day"
      at: "0:30"
    storages:
      scp:
        type: scp
        keep: 10
        path: ~/backup
        host: your-host.com
        private_key: ~/.ssh/id_rsa
        username: ubuntu
        password: password
        timeout: 300
  test_model:
    compress_with:
      type: tgz
    storages:
      ftp:
        type: ftp
        keep: 15
        path: /backup1/foo
        host: your-host.com
        port: 21
        timeout: 30
        username: user1
        password: pass1
  expand_env:
    databases:
      postgresql:
        type: postgresql
        database: demo
    storages:
      s3:
        type: s3
        bucket: gobackup-test
        region: ap-southeast-1
        path: backups
        access_key_id: $S3_ACCESS_KEY_ID
        secret_access_key: ${S3_SECRET_ACCESS_KEY}
  demo:
    schedule:
      every: "30s"
    compress_with:
      type: tgz
    encrypt_with:
      type: openssl
      password: 123456
      salt: false
      chiper: rc4
    notifiers:
    storages:
      local:
        type: local
        keep: 10
        path: /Users/jason/Downloads/backup1
    archive:
      includes:
        - /Users/jason/work/imageproxy
      excludes:
        - /home/ubuntu/.ssh/known_hosts
        - /etc/logrotate.d/syslog
